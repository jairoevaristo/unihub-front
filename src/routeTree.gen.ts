/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './pages/__root'
import { Route as PrivateLayoutRouteImport } from './pages/_private/layout'
import { Route as AuthLayoutRouteImport } from './pages/_auth/layout'
import { Route as IndexRouteImport } from './pages/index'
import { Route as PrivateHomeRouteImport } from './pages/_private/home'
import { Route as AuthSignUpRouteImport } from './pages/_auth/sign-up'
import { Route as AuthSignInRouteImport } from './pages/_auth/sign-in'
import { Route as PrivateOnboardingIndexRouteImport } from './pages/_private/onboarding/index'
import { Route as PrivateClassromTaskRouteImport } from './pages/_private/$classrom/task'
import { Route as PrivateClassromStudentsRouteImport } from './pages/_private/$classrom/students'
import { Route as PrivateClassromNewsRouteImport } from './pages/_private/$classrom/news'
import { Route as PrivateClassromDashboardRouteImport } from './pages/_private/$classrom/dashboard'
import { Route as PrivateClassromChatRouteImport } from './pages/_private/$classrom/chat'

const PrivateLayoutRoute = PrivateLayoutRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLayoutRoute = AuthLayoutRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateHomeRoute = PrivateHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => AuthLayoutRoute,
} as any)
const PrivateOnboardingIndexRoute = PrivateOnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateClassromTaskRoute = PrivateClassromTaskRouteImport.update({
  id: '/$classrom/task',
  path: '/$classrom/task',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateClassromStudentsRoute = PrivateClassromStudentsRouteImport.update({
  id: '/$classrom/students',
  path: '/$classrom/students',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateClassromNewsRoute = PrivateClassromNewsRouteImport.update({
  id: '/$classrom/news',
  path: '/$classrom/news',
  getParentRoute: () => PrivateLayoutRoute,
} as any)
const PrivateClassromDashboardRoute =
  PrivateClassromDashboardRouteImport.update({
    id: '/$classrom/dashboard',
    path: '/$classrom/dashboard',
    getParentRoute: () => PrivateLayoutRoute,
  } as any)
const PrivateClassromChatRoute = PrivateClassromChatRouteImport.update({
  id: '/$classrom/chat',
  path: '/$classrom/chat',
  getParentRoute: () => PrivateLayoutRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/home': typeof PrivateHomeRoute
  '/$classrom/chat': typeof PrivateClassromChatRoute
  '/$classrom/dashboard': typeof PrivateClassromDashboardRoute
  '/$classrom/news': typeof PrivateClassromNewsRoute
  '/$classrom/students': typeof PrivateClassromStudentsRoute
  '/$classrom/task': typeof PrivateClassromTaskRoute
  '/onboarding': typeof PrivateOnboardingIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof AuthSignInRoute
  '/sign-up': typeof AuthSignUpRoute
  '/home': typeof PrivateHomeRoute
  '/$classrom/chat': typeof PrivateClassromChatRoute
  '/$classrom/dashboard': typeof PrivateClassromDashboardRoute
  '/$classrom/news': typeof PrivateClassromNewsRoute
  '/$classrom/students': typeof PrivateClassromStudentsRoute
  '/$classrom/task': typeof PrivateClassromTaskRoute
  '/onboarding': typeof PrivateOnboardingIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthLayoutRouteWithChildren
  '/_private': typeof PrivateLayoutRouteWithChildren
  '/_auth/sign-in': typeof AuthSignInRoute
  '/_auth/sign-up': typeof AuthSignUpRoute
  '/_private/home': typeof PrivateHomeRoute
  '/_private/$classrom/chat': typeof PrivateClassromChatRoute
  '/_private/$classrom/dashboard': typeof PrivateClassromDashboardRoute
  '/_private/$classrom/news': typeof PrivateClassromNewsRoute
  '/_private/$classrom/students': typeof PrivateClassromStudentsRoute
  '/_private/$classrom/task': typeof PrivateClassromTaskRoute
  '/_private/onboarding/': typeof PrivateOnboardingIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/home'
    | '/$classrom/chat'
    | '/$classrom/dashboard'
    | '/$classrom/news'
    | '/$classrom/students'
    | '/$classrom/task'
    | '/onboarding'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/home'
    | '/$classrom/chat'
    | '/$classrom/dashboard'
    | '/$classrom/news'
    | '/$classrom/students'
    | '/$classrom/task'
    | '/onboarding'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_private'
    | '/_auth/sign-in'
    | '/_auth/sign-up'
    | '/_private/home'
    | '/_private/$classrom/chat'
    | '/_private/$classrom/dashboard'
    | '/_private/$classrom/news'
    | '/_private/$classrom/students'
    | '/_private/$classrom/task'
    | '/_private/onboarding/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLayoutRoute: typeof AuthLayoutRouteWithChildren
  PrivateLayoutRoute: typeof PrivateLayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthLayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/home': {
      id: '/_private/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof PrivateHomeRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_auth/sign-up': {
      id: '/_auth/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_auth/sign-in': {
      id: '/_auth/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof AuthLayoutRoute
    }
    '/_private/onboarding/': {
      id: '/_private/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof PrivateOnboardingIndexRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/$classrom/task': {
      id: '/_private/$classrom/task'
      path: '/$classrom/task'
      fullPath: '/$classrom/task'
      preLoaderRoute: typeof PrivateClassromTaskRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/$classrom/students': {
      id: '/_private/$classrom/students'
      path: '/$classrom/students'
      fullPath: '/$classrom/students'
      preLoaderRoute: typeof PrivateClassromStudentsRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/$classrom/news': {
      id: '/_private/$classrom/news'
      path: '/$classrom/news'
      fullPath: '/$classrom/news'
      preLoaderRoute: typeof PrivateClassromNewsRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/$classrom/dashboard': {
      id: '/_private/$classrom/dashboard'
      path: '/$classrom/dashboard'
      fullPath: '/$classrom/dashboard'
      preLoaderRoute: typeof PrivateClassromDashboardRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
    '/_private/$classrom/chat': {
      id: '/_private/$classrom/chat'
      path: '/$classrom/chat'
      fullPath: '/$classrom/chat'
      preLoaderRoute: typeof PrivateClassromChatRouteImport
      parentRoute: typeof PrivateLayoutRoute
    }
  }
}

interface AuthLayoutRouteChildren {
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
}

const AuthLayoutRouteChildren: AuthLayoutRouteChildren = {
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
}

const AuthLayoutRouteWithChildren = AuthLayoutRoute._addFileChildren(
  AuthLayoutRouteChildren,
)

interface PrivateLayoutRouteChildren {
  PrivateHomeRoute: typeof PrivateHomeRoute
  PrivateClassromChatRoute: typeof PrivateClassromChatRoute
  PrivateClassromDashboardRoute: typeof PrivateClassromDashboardRoute
  PrivateClassromNewsRoute: typeof PrivateClassromNewsRoute
  PrivateClassromStudentsRoute: typeof PrivateClassromStudentsRoute
  PrivateClassromTaskRoute: typeof PrivateClassromTaskRoute
  PrivateOnboardingIndexRoute: typeof PrivateOnboardingIndexRoute
}

const PrivateLayoutRouteChildren: PrivateLayoutRouteChildren = {
  PrivateHomeRoute: PrivateHomeRoute,
  PrivateClassromChatRoute: PrivateClassromChatRoute,
  PrivateClassromDashboardRoute: PrivateClassromDashboardRoute,
  PrivateClassromNewsRoute: PrivateClassromNewsRoute,
  PrivateClassromStudentsRoute: PrivateClassromStudentsRoute,
  PrivateClassromTaskRoute: PrivateClassromTaskRoute,
  PrivateOnboardingIndexRoute: PrivateOnboardingIndexRoute,
}

const PrivateLayoutRouteWithChildren = PrivateLayoutRoute._addFileChildren(
  PrivateLayoutRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLayoutRoute: AuthLayoutRouteWithChildren,
  PrivateLayoutRoute: PrivateLayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
